{***************************************************************}
{ |\  /|                                                We Put  }
{ | >< Hypercosm             meter.ores                 3d      }
{ |/  \|                                                To Work }
{***************************************************************}
{                                                               }
{               Contains a meter subject definition.            }
{                                                               }
{***************************************************************}
{                Copyright (c) 2000 Hypercosm, Inc.             }
{***************************************************************}

include "interactions.ores";
include "futura_l.ores";
include "picking.ores";
include "shapes.ores";
include "arrows.ores";

subject meter
does
	// constructor
	//
	verb new
		labelled string type label is none;
		from scalar min_value = 0;
		to scalar max_value = 1;
		shows scalar reference value refers to none;
	end;

	// rendering method
	//
	shape instance;
has
	// attributes
	//
	public scalar reference value;

	// private attributes
	//
	string type label;
	scalar min_value, max_value, internal_value;
	scalar range;
is
	//
	// constructor
	//

	verb new
		labelled string type label is none;
		from scalar min_value = 0;
		to scalar max_value = 1;
		shows scalar reference value refers to none;
	is
		meter's label is label;
		meter's min_value = min_value;
		meter's max_value = max_value;
		meter's range = max_value - min_value;
		meter's internal_value = (min_value + max_value) / 2;
		if value refers to none then
			meter's value refers to internal_value;
		else
			meter's value refers to value;
		end;
	end;    // new

	//
	// rendering methods
	//

	objective shape pointer is
		arrow from <0 0 0> to <0 1 0>;
	end;    // pointer

	objective shape face is
		parallelogram with
			color = white;
			magnify by .999;
		end;
		parallelogram with
			scale by .9 along <1 0 0>;
			scale by .15 along <0 1 0>;
			move to <0 -.75 0>;
			color = light grey;
		end;
		disk with
			umax = 90;
			rotate by 45 around <0 0 1>;
			magnify by 1.25;
			move to <0 -.5 0>;
			color = light grey;
		end;
	end;    // face

	shape instance is
		scalar angle;
		value = clamp value from min_value to max_value;
		angle = (value - min_value) / range * 90;
		face;
		futura_l_word label with
			move to <0 -.75 .2>;
		end;
		pointer with
			rotate by 45 - angle around <0 0 1>;
			move to <0 -.5 .01>;
		end;
	end;    // instance
end;    // meter