{***************************************************************}
{ |\  /|                                                We Put  }
{ | >< Hypercosm        3ds_chamfer_cyl.ores            3d      }
{ |/  \|                                                To Work }
{***************************************************************}
{                                                               }
{       Contains chamfer cyl definitions that correspond to     }
{       entities from Discreet's 3D Studio Max software.        }
{                                                               }
{***************************************************************}
{                Copyright (c) 2004 Hypercosm, LLC.             }
{***************************************************************}

include "system/3ds_sliceable_object.ores";
include "system/3ds_modifier_stacks.ores";
include "system/3ds_cylinder.ores";
include "system/3ds_torus.ores";

final subject translated_3ds_chamfer_cyl
extends
	translated_3ds_collapsable translated_3ds_sliceable_object
does
	// constructor
	//
	verb new with
	
		// geometry parameters
		//
		scalar radius = 1;
		scalar height = 2;
		scalar fillet = .25;
		
		// tessellation parameters
		//
		integer height_segments = 1;
		integer fillet_segments = 4;
		integer sides = 16;
		integer cap_segments = 4;
		boolean smooth is true;
		
		// slicing parameters
		//
		boolean slice_on is false;
		scalar slice_from = 0;
		scalar slice_to = 0;
		
		// texturing parameters
		//
		boolean gen_mapping_coords is false;
		
		// additional parameters that
		// are not provided by 3DS Max
		//
		boolean capping is true;
	end;
	
	// setting method
	//
	verb set with
	
		// geometry parameters
		//
		scalar radius = 1;
		scalar height = 2;
		scalar fillet = .25;
		
		// tessellation parameters
		//
		integer height_segments = 1;
		integer fillet_segments = 4;
		integer sides = 16;
		integer cap_segments = 4;
		boolean smooth is true;
		
		// slicing parameters
		//
		boolean slice_on is false;
		scalar slice_from = 0;
		scalar slice_to = 0;
		
		// texturing parameters
		//
		boolean gen_mapping_coords is false;
		
		// additional parameters that
		// are not provided by 3DS Max
		//
		boolean capping is true;
	end;
		
	// collapsing method
	//
	translated_3ds_stackable type question get_collapsed;
	
	// recycling methods
	//
	objective translated_3ds_chamfer_cyl type question get;
	reference verb recycle; 
has
	// attributes
	//
	scalar radius;
	scalar height;
	scalar fillet;
	
	// tessellation attributes
	//
	integer height_segments;
	integer fillet_segments;
	integer sides;
	integer cap_segments;
	boolean smooth;
	
	// additional attributes that
	// are not provided by 3DS Max
	//
	boolean capping;
private 
	// recycling attributes
	//
	translated_3ds_chamfer_cyl type next is none;
is
	// recycling free list
	//
	translated_3ds_chamfer_cyl type free_list is none;
	
	//
	// constructor
	//
		
	verb new with
	
		// geometry parameters
		//
		scalar radius = 1;
		scalar height = 2;
		scalar fillet = .25;
		
		// tessellation parameters
		//
		integer height_segments = 1;
		integer fillet_segments = 4;
		integer sides = 16;
		integer cap_segments = 4;
		boolean smooth is true;
		
		// slicing parameters
		//
		boolean slice_on is false;
		scalar slice_from = 0;
		scalar slice_to = 0;
		
		// texturing parameters
		//
		boolean gen_mapping_coords is false;
		
		// additional parameters that
		// are not provided by 3DS Max
		//
		boolean capping is true;
	is
		translated_3ds_sliceable_object new with
			
			// set slicing parameters
			//
			slice_on is static slice_on;
			slice_from = static slice_from;
			slice_to = static slice_to;
					
			// set texturing parameters
			//
			gen_mapping_coords is static gen_mapping_coords;
		end;

		if verbose_recycling then
			write "new 3ds chamfer cyl", ;
		end;
					
		with translated_3ds_chamfer_cyl do
		
			// set geometry attributes
			//
			its radius = larger of radius and 0;
			its height = height;
			its fillet = fillet;
			
			// set tessellation attributes
			//
			its height_segments = height_segments;
			its fillet_segments = fillet_segments;
			its sides = sides;
			its cap_segments = cap_segments;
			its smooth is smooth;
			
			// set additional attributes that
			// are not provided by 3DS Max
			//
			its capping is capping;
		end;
	end;    // new  

	//
	// setting method
	//
	
	verb set with
	
		// geometry parameters
		//
		scalar radius = 1;
		scalar height = 2;
		scalar fillet = .25;
		
		// tessellation parameters
		//
		integer height_segments = 1;
		integer fillet_segments = 4;
		integer sides = 16;
		integer cap_segments = 4;
		boolean smooth is true;
		
		// slicing parameters
		//
		boolean slice_on is false;
		scalar slice_from = 0;
		scalar slice_to = 0;
		
		// texturing parameters
		//
		boolean gen_mapping_coords is false;
		
		// additional parameters that
		// are not provided by 3DS Max
		//
		boolean capping is true;
	is
		with translated_3ds_chamfer_cyl do
		
			// set geometry attributes
			//
			its radius = larger of radius and 0;
			its height = height;
			its fillet = fillet;
			
			// set tessellation attributes
			//
			its height_segments = height_segments;
			its fillet_segments = fillet_segments;
			its sides = sides;
			its cap_segments = cap_segments;
			its smooth is smooth;
			
			// set additional attributes that
			// are not provided by 3DS Max
			//
			its capping is capping;
			
			// set slicing parameters
			//
			its slice_on is slice_on;
			its slice_from = slice_from;
			its slice_to = slice_to;
					
			// set texturing parameters
			//
			its gen_mapping_coords is gen_mapping_coords;
		end;    
	end;    // set
	
	//
	// collapsing method
	//
	
	translated_3ds_stackable type question get_collapsed is
		translated_3ds_editable_mesh type editable_mesh is translated_3ds_editable_mesh type's get;
		translated_3ds_editable_mesh type part_mesh is none;            
		trans type part_trans;
		
		// restrict radius to positive values
		//
		if radius > 0 then  
			translated_3ds_cylinder type translated_3ds_cylinder is none;
			translated_3ds_torus type translated_3ds_torus is none;
			
			translated_3ds_cylinder is translated_3ds_cylinder type's get;
			translated_3ds_cylinder set with
				radius = static radius - fillet;
				height = abs static height;
				height_segments = 0;
				cap_segments = static cap_segments;
				sides = static sides;
				smooth is static smooth;
				slice_on is static slice_on;
				slice_from = static slice_from;
				slice_to = static slice_to;
				gen_mapping_coords is static gen_mapping_coords;
				capping is true;
				slice_capping is static capping;
				
				// create part transformation
				// 
				part_trans = unit_trans;
				if static height < 0 then
					move the part_trans to <0 0 static height>;
				end;
			end;
			part_mesh is to_translated_3ds_editable_mesh of translated_3ds_cylinder;
			translated_3ds_cylinder recycle;
			part_mesh transform from part_trans;
			editable_mesh add_editable_mesh_elements of part_mesh;
			part_mesh recycle;
			translated_3ds_torus is translated_3ds_torus type's get;
			translated_3ds_torus set with           
				radius = static radius - fillet;
				radius2 = fillet;
				rotation = 0;
				twist = 0;
				segments = static sides;
				sides = fillet_segments;
				if static smooth then
					smoothing is all;
				else
					smoothing is none;
				end;
				slice_on is true;
				slice_from = static slice_from;
				slice_to = static slice_to;
				gen_mapping_coords is static gen_mapping_coords;
				capping is static capping;
				slice_from2 = 360;
				slice_to2 = 270;
				
				// create part transformation
				// 
				part_trans = unit_trans;
				rotate the part_trans by -90 around <0 0 1>;
				move the part_trans to <0 0 fillet>;
				if static height < 0 then
					move the part_trans to <0 0 static height>;
				end;
			end;
			part_mesh is to_translated_3ds_editable_mesh of translated_3ds_torus;
			translated_3ds_torus recycle;
			part_mesh transform from part_trans;
			editable_mesh add_editable_mesh_elements of part_mesh;
			part_mesh recycle;
			translated_3ds_cylinder is translated_3ds_cylinder type's get;
			translated_3ds_cylinder set with                        
				radius = static radius;
				height = abs static height - fillet * 2;
				height_segments = static height_segments;
				cap_segments = 0;
				sides = static sides;
				smooth is static smooth;
				slice_on is static slice_on;
				slice_from = static slice_from;
				slice_to = static slice_to;
				gen_mapping_coords is static gen_mapping_coords;
				capping is static capping;
				// create part transformation
				// 
				part_trans = unit_trans;            
				move the part_trans to <0 0 fillet>;
				if static height < 0 then
					move the part_trans to <0 0 static height>;
				end;
			end;
			part_mesh is to_translated_3ds_editable_mesh of translated_3ds_cylinder;
			translated_3ds_cylinder recycle;
			part_mesh transform from part_trans;
			editable_mesh add_editable_mesh_elements of part_mesh;
			part_mesh recycle;      
			translated_3ds_torus is translated_3ds_torus type's get;
			translated_3ds_torus set with               
				radius = static radius - fillet;
				radius2 = fillet;
				rotation = 0;
				twist = 0;
				segments = static sides;
				sides = fillet_segments;
				if static smooth then
					smoothing is all;
				else
					smoothing is none;
				end;
				slice_on is true;
				slice_from = static slice_from;
				slice_to = static slice_to;
				gen_mapping_coords is static gen_mapping_coords;
				capping is static capping;
				slice_from2 = 90;
				slice_to2 = 0;
				
				// create part transformation
				// 
				part_trans = unit_trans;
				rotate the part_trans by -90 around <0 0 1>;
				move the part_trans to <0 0 (abs height - fillet)>;
				if static height < 0 then
					move the part_trans to <0 0 static height>;
				end;
			end;
			part_mesh is to_translated_3ds_editable_mesh of translated_3ds_torus;
			translated_3ds_torus recycle;
			part_mesh transform from part_trans;
			editable_mesh add_editable_mesh_elements of part_mesh;
			part_mesh recycle;
		end;
		
		recycle;
		answer editable_mesh;
	end;    // get_collapsed

	//  
	// recycling methods
	//
	
	objective translated_3ds_chamfer_cyl type question get is
		if some free_list then
		
			// get from free list
			//
			translated_3ds_chamfer_cyl type next is free_list;
			free_list is its next;
			
			answer next;
		else
			// create new
			//
			answer new translated_3ds_chamfer_cyl;
		end;
	end;    // get
	
	reference verb recycle is
	
		// add to free list
		//
		next is free_list;
		free_list is translated_3ds_chamfer_cyl;
		
		translated_3ds_chamfer_cyl is none;
	end;        // recycle          
end;    // translated_3ds_chamfer_cyl

//
// procedural interface
//

shape translated_3ds_chamfer_cyl with
	
	// geometry parameters
	//
	scalar radius = 1;
	scalar height = 2;
	scalar fillet = .25;
	
	// tessellation parameters
	//
	integer height_segments = 1;
	integer fillet_segments = 4;
	integer sides = 16;
	integer cap_segments = 4;
	boolean smooth is true;
	
	// slicing parameters
	//
	boolean slice_on is false;
	scalar slice_from = 0;
	scalar slice_to = 0;
	
	// texturing parameters
	//
	boolean gen_mapping_coords is false;
	
	// additional parameters that
	// are not provided by 3DS Max
	//
	boolean capping is true;
	
	// modifier stack
	//
	translated_3ds_chamfer_cyl type translated_3ds_chamfer_cyl is translated_3ds_chamfer_cyl type's get;
	modifier_stack push translated_3ds_stackable type translated_3ds_chamfer_cyl;
is
	// set first entry in modifier stack to object
	//
	translated_3ds_chamfer_cyl set with
	
		// set geometry parameters
		//
		radius = static radius;
		height = static height;
		fillet = static fillet;
		
		// set tessellation parameters
		//
		height_segments = static height_segments;
		fillet_segments = static fillet_segments;
		sides = static sides;
		cap_segments = static cap_segments;
		smooth is static smooth;
		
		// set slicing parameters
		//
		slice_on is static slice_on;
		slice_from = static slice_from;
		slice_to = static slice_to;
		
		// set texturing parameters
		//
		gen_mapping_coords is static gen_mapping_coords;
		
		// set additional parameters that
		// are not provided by 3DS Max
		//
		capping is static capping; 
	end;
	
	// render
	//
	modifier_stack instance;
end;    // translated_3ds_chamfer_cyl