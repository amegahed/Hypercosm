{***************************************************************}
{                       overlay_text.omar                       }
{          Object-Oriented Modelling and Rendering (OMAR)       }
{***************************************************************} 
{                                                               }
{       Contains sample code that demonstrates how to use       }
{       Hypercosm's overlay_text.                               }
{                                                               }
{***************************************************************} 
{                Copyright (c) 2000 Hypercosm, Inc.             }
{***************************************************************} 
do text_anim;


include "system/3d.ores";
include "system/native_text.ores";
include "system/time.ores";


picture scene is
    static timer type spin with
        ticks_per_second = 60;
    end;
    
    // Note that overlay_text locations are specified in window
    // coordinates... The x-value, indicating horizontal position,
    // ranges from -1 to 1, as does the y-value, which indicates 
    // the vertical position.  Therefore the center of the window
    // is indicated by the vector: <0 0 0>.
    //
    // The shapes in this scene, on the other hand, use the
    // standard Hypercosm 3D coordinate system.
    
    // SPHERE:
    //
    overlay_text "sphere" at <-.5 .5 0>;        // sphere label

    sphere with
        rotate by spin position around <0 0 1>;
        move to <-3 0 2>;
        material is plastic colored red;
    end;
    

    // CYLINDER:
    //    
    overlay_text "cylinder" at <.5 .5 0> with   // cylinder label
        font_family is serif_overlay_font_family;
        bold is true;
        italic is true;
        size = height div 15;   // NOTE: Overlay size should be given
                                // as a proportion of the window height
                                // (using the "height" variable) so that
                                // the text is always proportional to
                                // the window size. The setting here
                                // sets the pixel-size of the text to be
                                // 1/15 the height of the window.
        color = green;
    end;

    cylinder with
        rotate by spin position around <1 0 0>;
        move to <3 0 2>;
        material is plastic colored red;
    end;


    // BLOCK:
    //
    overlay_text "block" at <-.5 -.5 0> with    // block label
        font_family is "courier new,courier";
        bold is true;
        underline is true;
        size = height div 8;
        color = yellow;
    end;

    block with
        rotate by spin position around <1 0 1>;
        move to <-3 0 -2>;
        material is plastic colored red;
    end;


    // TORUS:
    //
    overlay_text " torus " at <.5 -.5 0> with    // torus label
        font_family is sans_serif_overlay_font_family;
        color = red;
        transparent_background is false;
        background_color = aqua; 
    end;

    torus with
        rotate by spin position around <-1 1 0>;
        move to <3 0 -2>;
        material is plastic colored red;
    end;

    
    // Mouse cursor indicator:
    //
    overlay_text ">0<" at (get_mouse) with
        bold is true;
        size = height div 12;
        color = light purple;
        h_align is center;
        v_align is middle;
    end;
  

    distant_light from <1 -3 2>;
end;    // scene


anim text_anim with
    eye = <0 -12 0>;
    double_buffer is on;
is
    set_cursor to hidden;

    while true do
        scene;
    end;
end;    // text_anim
