{***************************************************************}
{                        lathe_demo.omar                        }
{          Object-Oriented Modelling and Rendering (OMAR)       }
{***************************************************************}
{                                                               }
{                                                               }
{***************************************************************}
{                Copyright (c) 2000 Hypercosm, Inc.             }
{***************************************************************}
do lathe_demo_anim;


include "system/3d.ores";
include "system/anims.ores";
include "system/native_text.ores";
include "system/shapes.ores";
include "system/arrow_shapes.ores";
include "system/arrows.ores";


// This applet demonstrates the use of the lathe shape.


integer selected_shape = 1;// currently selected lathed shape
// 1 = square
// 2 = triangle
// 3 = star
// 4 = octagon


picture scene is
    integer key_pressed = 0;
    
    // looking for all key presses in a frame
    //
    reset_frame_events;
    key_pressed = get_key;
    while key_pressed > 0 do
        if key_pressed = char_to_key "-" then
            if selected_shape > 1 then
                selected_shape = itself - 1;
            else
                selected_shape = 4;
            end;
        elseif key_pressed = char_to_key "=" then
            if selected_shape < 4 then
                selected_shape = itself + 1;
            else
                selected_shape = 1;
            end;
        end;
        key_pressed = get_key;
    end;
    
    // lighting
    default_lights;
    
    axes with
        magnify by 8;
    end;
    
    material is chalk colored grey;

    // Drawing the lathe based on which shape is currently selected...
    // The lathe shape must be passed an array of scalar pairs indicating
    // height and radius, respectively.
    //
    if selected_shape = 1 then
    
        // These pairs indicate a rectangle, which produces a cylinder:
        // 
        lathe [[-2 0] [-2 4] [2 4] [2 0]] with
            umax = 180 + get_mouse dot <1 0 0> * 180;
        end;
    elseif selected_shape = 2 then
    
        // These pairs indicate a triangle:
        //
        lathe [[-2 0] [2 2.5] [-2 5] [-2 0]] with
            umax = 180 + get_mouse dot <1 0 0> * 180;
        end;
    elseif selected_shape = 3 then
    
        // These pairs indicate a star shape:
        //
        lathe [[1 0] [1 1] [2.2 1.5] [1 2] [1 3] [0 2.2] [-2 2.5] [-.6 1.5]
               [-2 .5] [0 .8] [1 0]] with
            umax = 180 + get_mouse dot <1 0 0> * 180;
        end;
    elseif selected_shape = 4 then
    
        // These pairs indicate an octagon shape:
        //
        lathe [[1 0] [2 1] [2 3] [1 4] [-1 4] [-2 3] [-2 1] [-1 0] [1 0]] with
            umax = 180 + get_mouse dot <1 0 0> * 180;
        end;
    end;
    
    // instructions
    //
    overlay_text "- PREVIOUS SHAPE" at <-.95 -.95 0> with
        h_align is left;
    end;
    overlay_text "+/= NEXT SHAPE" at <.95 -.95 0> with
        h_align is right;
    end;
end;    // scene


anim lathe_demo_anim with
    double_buffer is on;
    eye = <12 -24 12>;
is
    mouse_controlled_picture scene;
end;    // lathe_demo_anim
