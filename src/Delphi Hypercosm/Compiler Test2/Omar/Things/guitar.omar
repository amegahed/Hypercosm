{***************************************************************}
{                          guitar.omar                          }
{          Object-Oriented Modelling and Rendering (OMAR)       }
{***************************************************************}
{                                                               }
{                                                               }
{***************************************************************}
{                Copyright (c) 2000 Hypercosm, Inc.             }
{***************************************************************}
do guitar_anim;


include "system/3d.ores";
include "system/anims.ores";


shape guitar is
    shape rounded_cylinder is
        torus with
            outer_radius = 1;
            inner_radius = .6;
            scale by 5 along <0 0 1>;
        end;
        disk with
            center = <0 0 1>;
            radius = .8;
        end;
        disk with
            center = <0 0 -1>;
            radius = .8;
        end;
    end;    // rounded_cylinder


    shape knob is
        cylinder with
            end1 = <0 0 0>;
            end2 = <0 -.2 0>;
            radius = .1;
        end;
        disk with
            center = <0 -.2 0>;
            normal = <0 1 0>;
            radius = .1;
        end;
        disk with
            material is chalk colored grey;
            center = <0 -.25 0>;
            normal = <0 1 0>;
            radius = .08;
        end;
    end;    // knob


    shape tuning_knob is
        cylinder with
            end1 = <0 0 0>;
            end2 = <0 0 .5>;
            radius = .03;
        end;
        sphere with
            center = <0 0 .5>;
            radius = .08;
            scale by .2 along <0 0 1> about <0 0 .5>;
        end;
    end;    // tuning_knob

        color = red;
    rounded_cylinder with
        scale by .21 along <0 0 1>;
        rotate by 90 around <1 0 0>;
        move to <0 .1 0>;
    end;
    rounded_cylinder with
        scale by .2 along <0 0 1>;
        rotate by 90 around <1 0 0>;
        move to <1.2 .1 .2>;
        skew from <0 0 1> to <.1 0 1.2>;
    end;    // body
    knob with
        material is chalk colored grey;
        move to <1.2 0 1>;
    end;
    knob with
        material is chalk colored grey;
        move to <1.5 0 1>;
    end;
    knob with
        material is chalk colored grey;
        move to <1.8 0 1>;
    end;
    cylinder with
        material is chalk colored brown;
        end1 = <1.2 0 0>;
        end2 = <-4 0 0>;
        radius = .1;
        scale by 2 along <0 0 1>;
    end;    // neck of guitar
    cylinder with
        material is chalk colored grey;
        end1 = <1.2 0 .4>;
        end2 = <1.2 0 -.4>;
        radius = .15;
    end;
    disk with
        material is chalk colored grey;
        center = <1.2 0 .4>;
        normal = <0 0 1>;
        radius = .15;
    end;
    disk with
        material is chalk colored grey;
        center = <1.2 0 -.4>;
        normal = <0 0 1>;
        radius = .15;
    end;    // string rest at base of neck
    sphere with
        center = <-4 .1 .2>;
        radius = .4;
        scale by .5 along <0 1 0> about <-4 0 .2>;
        skew from <-4 0 .5> to <-4.1 0 .6> about <-4 0 .2>;
    end;
    tuning_knob with
        material is rubber;
        move to <-4.2 0 .5>;
    end;
    tuning_knob with
        material is rubber;
        move to <-4 0 .5>;
    end;
    tuning_knob with
        material is rubber;
        move to <-3.8 0 .5>;
    end;

    // strings
    //
    cylinder with
        material is chalk colored white;
        end1 = <-4.2 -.15 .1>;
        end2 = <1.2 -.15 .1>;
        radius = .03;
    end;
    cylinder with
        material is chalk colored white;
        end1 = <-4 -.15 0>;
        end2 = <1.2 -.15 0>;
        radius = .02;
    end;
    cylinder with
        material is chalk colored white;
        end1 = <-3.8 -.15 -.1>;
        end2 = <1.2 -.15 -.1>;
        radius = .01;
    end;
end;    // guitar


anim guitar_anim
    args type args;
with
    eye = <2 -8 4>;
    lookat = <-.5 0 0>;
    double_buffer is on;
    args check;
is
    mouse_controlled_shape guitar;
end;    // guitar_anim
