{***************************************************************}
{                          anode_mixer.omar                     }
{          Object-Oriented Modelling and Rendering (OMAR)       }
{***************************************************************}
{                                                               }
{                                                               }
{***************************************************************}
{                Copyright (c) 2000 Hypercosm, Inc.             }
{***************************************************************}
do anode_mixer_anim;


include "system/3d.ores";
include "system/anims.ores";
include "system/pipes.ores";
include "system/cabinet.omar";
include "system/mixer.omar";


subject anode_mixer
extends
    timed_actor
does
    verb new with
        scalar table_length = 25;
        scalar table_width = 5;
        scalar table_height = 4;
        scalar pipe_radius = .2;
        scalar globule_radius = .175;
        scalar spacing = .5;
        scalar rpm = 60;
    end;    // new

    verb advance
        by scalar time_step;
    end;
    shape instance;
has
    // separator line's attributes
    //
    scalar table_length;
    scalar table_width;
    scalar table_height;

    // animated plumbing attributes
    //
    scalar pipe_radius;
    scalar globule_radius;
    scalar spacing;

    // mixers
    //
    mixer type mixer1 is none;
    mixer type mixer2 is none;
    mixer type mixer3 is none;
    mixer type mixer4 is none;
is
    verb new with
        scalar table_length = 25;
        scalar table_width = 5;
        scalar table_height = 4;
        scalar pipe_radius = .2;
        scalar globule_radius = .175;
        scalar spacing = .5;
        scalar rpm = 60;
    is
        // initialize separator line's attributes
        //
        anode_mixer's table_length = table_length;
        anode_mixer's table_width = table_width;
        anode_mixer's table_height = table_height;

        // initialize animated plumbing attributes
        //
        anode_mixer's pipe_radius = pipe_radius;
        anode_mixer's globule_radius = globule_radius;
        anode_mixer's spacing = spacing;

        // initialize mixers
        //
        new mixer1 with
            left_label is "Kynar";
            right_label is "Plasticizer";
            pipe_radius = static pipe_radius;
            globule_radius = static globule_radius;
            spacing = static spacing;
            rpm = static rpm;
        end;
        new mixer2 with
            left is false;
            right_label is "Acetone";
            pipe_radius = static pipe_radius;
            globule_radius = static globule_radius;
            spacing = static spacing;
            rpm = static rpm;
        end;
        new mixer3 with
            left_label is "Carbon";
            right_label is "MCMB";
            right_color = orange;
            pipe_radius = static pipe_radius;
            globule_radius = static globule_radius;
            spacing = static spacing;
            rpm = static rpm;
        end;
        new mixer4 with
            left is false;
            right is false;
            pipe_radius = static pipe_radius;
            globule_radius = static globule_radius;
            spacing = static spacing;
            rpm = static rpm;
        end;
    end;    // new


    verb advance
        by scalar time_step;
    is
        timed_actor static advance by time_step;
        mixer1 advance by time_step;
        mixer2 advance by time_step;
        mixer3 advance by time_step;
        mixer4 advance by time_step;
    end;    // advance


    shape mixers is
        scalar mixer1_offset = -9;
        scalar mixer2_offset = -4;
        scalar mixer4_offset = 1;
        scalar mixer3_offset = 6;
        scalar collector_offset = 11;

        mixer1 instance with
            move to <mixer1_offset 0 0>;
        end;
        mixer2 instance with
            move to <mixer2_offset 0 0>;
        end;
        mixer3 instance with
            move to <mixer3_offset 0 0>;
        end;
        mixer4 instance with
            move to <mixer4_offset 0 0>;
        end;

        // collection tank
        //
        cylinder with
            end1 = <collector_offset 0 0>;
            end2 = <collector_offset 0 3>;
            radius = 1.5;
            color = red;
        end;

        // pipes from left mixer to right mixer
        //
        s_pipeline from <mixer1_offset 0 1> to
            <(mixer2_offset - 1) 0 3>
        with
            vertical_offset = .5;
            radius = pipe_radius;
            globule_radius = static globule_radius;
            spacing = static spacing;
            factor = .75;
            offset = time;
            color = white;
        end;

        // pipes from left mixer to final mixer
        //
        s_pipeline from <mixer2_offset 0 1> to
            <(mixer4_offset - 1) 0 3>
        with
            vertical_offset = .5;
            radius = pipe_radius;
            globule_radius = static globule_radius;
            spacing = static spacing;
            factor = .75;
            offset = time;
            color = white;
        end;

        // pipes from right mixer to final mixer
        //
        s_pipeline from <mixer3_offset 0 1> to
            <(mixer4_offset + 1) 0 3>
        with
            vertical_offset = .5;
            radius = pipe_radius;
            globule_radius = static globule_radius;
            spacing = static spacing;
            factor = .75;
            offset = time;
            color = white;
        end;

        // pipes from final mixer to collector
        //
        pipeline through [<mixer4_offset 0 1> <mixer4_offset 0 .5>
            <mixer4_offset -2 .5> <(collector_offset - 2) -2 .5>
            <(collector_offset - 2) 0 .5>
            <(collector_offset - 2) 0 3.5>
            <(collector_offset - 1) 0 3.5>
            <(collector_offset - 1) 0 3>]
        with
            radius = pipe_radius;
            globule_radius = static globule_radius;
            spacing = static spacing;
            offset = time;
            color = white;
        end;
    end;    // mixers


    shape instance is
        cabinet with
            table_length = anode_mixer's table_length;
            table_width = anode_mixer's table_width;
            table_height = anode_mixer's table_height;
            top_width = table_width - 1.5;
            magnify the shader_trans by 5;
        end;

        mixers with
            move to <0 .5 table_height>;
        end;
    end;    // instance
end;    // anode_mixer


anim anode_mixer_anim
    args type args;
with
    double_buffer is on;
    eye = <-15 -25 15>;
    lookat = <0 0 5>;
    yaw = -2;
    pitch = -2;
    window_name is "Anode Material Mixer";
    background = black;
    args check;
is
    anode_mixer type anode_mixer;

    shape environment is
        plane with
            magnify by 15;
            render_mode is wireframe;
        end;
    end;    // environment

    mouse_controlled_actor anode_mixer in environment;
end;    // anode_mixer_anim
