{***************************************************************}
{                          arrow_axes.omar                      }
{          Object-Oriented Modelling and Rendering (OMAR)       }
{***************************************************************}
{                                                               }
{                                                               }
{***************************************************************}
{                Copyright (c) 2000 Hypercosm, Inc.             }
{***************************************************************}
do axes_anim;


include "system/3d.ores";
include "system/anims.ores";
include "system/alpha.omar";
include "system/args.ores";


shape arrow3d is
    cylinder with
        end1 = <.8 0 0>;
        end2 = <-.8 0 0>;
        radius = .05;
        color = white;
    end;
    cone with
        end1 = <.8 0 0>;
        end2 = <1 0 0>;
        radius1 = .1;
        radius2 = 0;
    end;
    paraboloid with
        top = <-.8 0 0>;
        base = <-1 0 0>;
        radius = .1;
    end;
    disk with
        center = <-1 0 0>;
        normal = <1 0 0>;
        radius = .1;
    end;
end;    // arrow3d


shape axes3d is

    // X axis
    arrow3d with
        color = red;
    end;

    // Y axis
    arrow3d with
        color = green;
        rotate by 90 around <0 0 1>;
    end;

    // Z axis
    arrow3d with
        color = blue;
        rotate by -90 around <0 1 0>;
    end;
    letter_x with
        color = red;
        magnify by .05;
        rotate by -90 around <1 0 0>;
        move to <1.1 0 0>;
    end;
    letter_y with
        color = green;
        magnify by .05;
        rotate by -90 around <1 0 0>;
        move to <0 1.2 0>;
    end;
    letter_z with
        color = blue;
        magnify by .05;
        move to <0 0 1.2>;
    end;
end;    // axes3d


picture axes_picture with
    coord_system is left_handed;
    eye = <1 2 -3>;
    lookat = <0 0 0>;
    double_buffer is on;
is
    axes3d;
end;    // axes_picture


anim axes_anim
    args type args;
with
    eye = <1 -3 2>;
    lookat = <0 0 .25>;
    double_buffer is on;
    args check;
is
    mouse_controlled_shape axes3d about <0 0 0>;
end;    // axes_anim
