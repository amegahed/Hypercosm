{***************************************************************}
{                          hypercube.omar                       }
{          Object-Oriented Modelling and Rendering (OMAR)       }
{***************************************************************}
{                                                               }
{                                                               }
{***************************************************************}
{                Copyright (c) 2000 Hypercosm, Inc.             }
{***************************************************************}
do hyper_anim;


include "system/3d.ores";
include "system/surfaces.ores";
include "system/anims.ores";


shape hypercube is
    shape hyper_nodes is
        sphere with
            center = <1 0 1>;
            radius = .2;
        end;
        sphere with
            center = <1 0 -1>;
            radius = .2;
        end;
    end;    // hyper_nodes


    shape hyper_edges is
        cylinder with
            end1 = <-1 0 1>;
            end2 = <1 0 1>;
            radius = .1;
        end;
        cylinder with
            end1 = <1 0 1>;
            end2 = <1 0 -1>;
            radius = .1;
        end;
        cylinder with
            end1 = <1 0 -1>;
            end2 = <-1 0 -1>;
            radius = .1;
        end;
    end;    // hyper_edges


    shape hyper_face is
        parallelogram with
            vertex = <-1 0 -1>;
            side1 = <2 0 0>;
            side2 = <0 0 2>;
        end;
    end;    // hyper_face


    shape side1 is
        hyper_nodes with
            material is metal colored light blue;
        end;
        hyper_edges with
            material is silver;
        end;
        transparent white hyper_face with
            move to <0 -.03 0>;
        end;
        transparent white hyper_face with
            move to <0 .03 0>;
        end;
    end;    // side1


    shape side2 is
        hyper_nodes with
            material is metal colored magenta;
        end;
        hyper_edges with
            material is silver;
        end;
        transparent blue hyper_face;
    end;    // side2


    shape cube1 is
        side1 with
            move to <0 1 0>;
        end;
        side1 with
            rotate by 180 around <0 0 1>;
            move to <0 -1 0>;
        end;
        side1 with
            rotate by -90 around <0 0 1>;
            move to <1 0 0>;
        end;
        side1 with
            rotate by 90 around <0 0 1>;
            move to <-1 0 0>;
        end;
        transparent white hyper_face with
            rotate by 90 around <1 0 0>;
            move to <0 0 -.97>;
        end;
        transparent white hyper_face with
            rotate by 90 around <1 0 0>;
            move to <0 0 -1.03>;
        end;
        transparent white hyper_face with
            rotate by 90 around <1 0 0>;
            move to <0 0 .97>;
        end;
        transparent white hyper_face with
            rotate by 90 around <1 0 0>;
            move to <0 0 1.03>;
        end;
    end;    // cube1


    shape cube2 is
        side2 with
            move to <0 1 0>;
        end;
        side2 with
            rotate by 180 around <0 0 1>;
            move to <0 -1 0>;
        end;
        side2 with
            rotate by -90 around <0 0 1>;
            move to <1 0 0>;
        end;
        side2 with
            rotate by 90 around <0 0 1>;
            move to <-1 0 0>;
        end;
    end;    // cube2


    shape cross_connect is
        cylinder with
            end1 = <1 1 1>;
            end2 = <.4 .4 .4>;
            radius = .04;
            material is metal colored white;
        end;
    end;    // cross_connect


    shape cross_connect1 is
        cross_connect;
        cross_connect with
            rotate by 90 around <0 0 1>;
        end;
        cross_connect with
            rotate by -90 around <0 0 1>;
        end;
        cross_connect with
            rotate by 180 around <0 0 1>;
        end;
    end;    // cross_connect1


    shape cross_connect2 is
        cross_connect1 with
            rotate by 180 around <1 0 0>;
        end;
    end;    // cross_connect2


    shape innerface is
        transparent white triangle <-1 -1 -1> <-.4 -.4 -.4>
            <.4 -.4 -.4>;
        transparent white triangle <-1 -1 -1> <1 -1 -1> <.4 -.4
            -.4>;
    end;    // innerface


    shape innerface1 is
        innerface;
        innerface with
            rotate by 90 around <0 0 1>;
        end;
        innerface with
            rotate by -90 around <0 0 1>;
        end;
        innerface with
            rotate by 180 around <0 0 1>;
        end;
    end;    // innerface1


    shape innerface2 is
        innerface1 with
            magnify by .9 about <0 0 -.5>;
        end;
    end;    // innerface2


    shape innerface3 is
        innerface2;
        innerface2 with
            rotate by 180 around <1 0 0>;
        end;
        innerface2 with
            rotate by 90 around <1 0 0>;
        end;
        innerface2 with
            rotate by -90 around <1 0 0>;
        end;
        innerface2 with
            rotate by 90 around <0 1 0>;
        end;
        innerface2 with
            rotate by -90 around <0 1 0>;
        end;
    end;    // innerface3

    cube1;
    cube2 with
        magnify by .4;
    end;
    cross_connect1;
    cross_connect2;
    innerface3;
end;    // hypercube


picture hyper_picture with
    field_of_view = 60;
    eye = <6 1.4 1.8>;
    eye = <6 .1 .5>;
    render_mode is shaded;
    facets = 0;
    reflections is on;
    refractions is on;
    shadows is on;
is
    distant_light from <.3 -.5 1>;
    hypercube with
        rotate by 10 around <1 0 0>;
        rotate by 5 around <0 0 1>;
        rotate by 15 around <0 1 0>;
        move to <0 0 .5>;
    end;
    plane with
        magnify by 5;
        move to <0 0 -1.1>;
    end;
end;    // hyper_picture


anim hyper_anim with
    eye = <6 1.4 1.8>;
    double_buffer is on;
is
    mouse_controlled_shape hypercube;
end;    // hyper_anim
