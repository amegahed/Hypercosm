{***************************************************************}
{                          dragonfly.omar                       }
{          Object-Oriented Modelling and Rendering (OMAR)       }
{***************************************************************}
{                                                               }
{                                                               }
{***************************************************************}
{                Copyright (c) 2000 Hypercosm, Inc.             }
{***************************************************************}
do interactive_dragonfly;


include "system/3d.ores";
include "system/actors.ores";
include "system/anims.ores";
include "system/common_materials.ores";


subject dragonfly
extends
    timed_actor
does
    objective shape form with
        scalar pincer_angle = 10;
        scalar flap_angle = 0;
    end;    // form

    shape instance;
has
    scalar flaps_per_sec = 2;
is
    objective shape pincer is
        cone with
            end1 = <0 0 0>;
            end2 = <0 0 -2>;
            radius1 = 1;
            radius2 = .5;
            skew from <0 0 -2> to <1.5 0 -2>;
        end;
        cone with
            end1 = <1.5 0 -2>;
            end2 = <1.5 0 -3>;
            radius1 = .5;
            radius2 = 0;
            skew from <1.5 0 -3> to <0 0 -3> about <1.5 0 -2>;
        end;
    end;    // pincer


    objective shape pincers with
        scalar angle = 10;  // 10 degrees open
    is
        pincer with
            scale by .5 along <0 1 0>;
            rotation of <0 (-angle) 90>;
        end;
        pincer with
            scale by -1 along <1 0 0>;
            scale by .5 along <0 1 0>;
            rotation of <0 (angle) 90>;
        end;
    end;    // pincers


    objective shape head with
        scalar pincer_angle = 10;
    is
        sphere with
            radius = 1;
            scale by .8 along <1 0 0>;
            scale by .8 along <0 1 0>;
        end;
        sphere with
            material is silver;
            radius = .6;
            scale by .8 along <1 0 0>;
            scale by .8 along <0 1 0>;
            move to <-.4 .4 .4>;
        end;    // eye
        sphere with
            material is silver;
            radius = .6;
            scale by .8 along <1 0 0>;
            scale by .8 along <0 1 0>;
            move to <-.4 -.4 .4>;
        end;    // eye
        pincers with
            angle = static pincer_angle;
            rotation of <0 50 0>;
            magnify by .3;
            move to <-.6 0 -.3>;
        end;
    end;    // head


    objective shape wing is

        {
                cylinder with
                        end1 = 1 0 0; end2 = 2 4 0; radius = .1, with
                        end1 = 2 4 0; end2 = 3 10 0; radius = .1, with
                        end1 = 3 10 0; end2 = 1 17 0; radius = .1, with
                        end1 = 1 17 0; end2 = -1 18 0; radius = .1, with
                        end1 = -1 18 0; end2 = -2.5 11 0; radius = .1, with
                        end1 = -2.5 11 0; end2 = -1 0 0; radius = .1;
                end;
                }
        polygon [<1 0 0> <2 4 0> <3 10 0> <1 17 0> <-1 18 0>
            <-2.5 11 0> <-1 0 0>];
    end;    // wing


    objective shape front_wings with
        scalar wing_flap = 20;
    is
        wing with
            scale by .6 along <1 0 0>;
            scale by .5 along <0 1 0>;
            skew from <0 1 0> to <-.2 1 0>;
            rotate by wing_flap around <1 0 0>;
        end;    // front right wing
        wing with
            scale by .6 along <1 0 0>;
            scale by -.5 along <0 1 0>;
            skew from <0 -1 0> to <-.2 -1 0>;
            rotate by -wing_flap around <1 0 0>;
        end;    // front left wing
    end;    // front_wings


    objective shape rear_wings with
        scalar wing_flap = 5;
    is
        wing with
            scale by .6 along <1 0 0>;
            scale by .3 along <0 1 0>;
            skew from <0 1 0> to <1 1 0>;
            rotate by -wing_flap around <1 0 0>;
        end;    // rear right wing
        wing with
            scale by .6 along <1 0 0>;
            scale by -.3 along <0 1 0>;
            skew from <0 -1 0> to <1 -1 0>;
            rotate by wing_flap around <1 0 0>;
        end;    // rear left wing
    end;    // rear_wings


    objective shape leg is
        cylinder with
            end1 = <0 0 0>;
            end2 = <0 2 1>;
            radius = .1;
        end, with
            end1 = <0 2 1>;
            end2 = <-1 3 -1>;
            radius = .1;
        end, with
            end1 = <-1 3 -1>;
            end2 = <-1 3.5 -1>;
            radius = .1;
        end;
    end;    // leg


    objective shape legs is
        leg with
            material is titanium;
            magnify by .8;
            rotate by 10 around <0 0 1>;
            rotate by -50 around <1 0 0>;
        end;
        leg with
            material is titanium;
            magnify by .8;
            scale by -1 along <0 1 0>;
            rotate by -10 around <0 0 1>;
            rotate by 50 around <1 0 0>;
        end;
        sphere with
            radius = .4;
            scale by 2 along <0 1 0>;
            move to <0 0 -.2>;
        end;
    end;    // legs


    objective shape body with
        scalar flap_angle = 0;
    is
        sphere with
            radius = 1;
            scale by 1.6 along <1 0 0>;
            rotate by -20 around <0 1 0>;
            move to <-.5 0 0>;
        end;
        sphere with
            radius = 1;
            scale by 1.6 along <1 0 0>;
            rotate by 20 around <0 1 0>;
            move to <.5 0 0>;
        end;

        // legs
        //
        legs with
            rotate by -20 around <0 1 0>;
            move to <0 0 -1>;
        end;    // rear legs
        legs with
            move to <-.5 0 -1>;
        end;    // middle legs
        legs with
            rotate by 40 around <0 1 0>;
            move to <-1.5 0 -1>;
        end;    // front legs

        // wings
        //
        front_wings with
            material is plastic colored white;
            wing_flap = flap_angle;
            rotate by -10 around <0 1 0>;
            move to <-1 0 .6>;
        end;    // front wings
        rear_wings with
            material is plastic colored white;
            move to <0 0 1>;
            wing_flap = flap_angle;
        end;    // front wings
    end;    // body


    objective shape abdomen is
        sphere with
            center = <.5 0 0>;
            radius = .5;
            scale by 6 along <1 0 0>;
        end;
        sphere with
            center = <6 0 0>;
            radius = .3;
            scale by 10 along <1 0 0> about <5.7 0 0>;
            rotate by 30 around <0 1 0> about <5.7 0 0>;
        end;
    end;    // abdomen


    objective shape form with
        scalar pincer_angle = 10;
        scalar flap_angle = 0;
    is
        head with
            pincer_angle = static pincer_angle;
            rotation of <20 0 0>;
            move to <-2.5 0 .3>;
        end;
        body with
            flap_angle = static flap_angle;
        end;
        abdomen with
            rotate by -30 around <0 1 0>;
            move to <1 0 -.8>;
        end;
    end;    // shape


    shape instance is
        form with
            material is metal colored dark green;
            pincer_angle = (cos (time * 360 *
                flaps_per_sec) + 1) * 15;
            flap_angle = cos (time * 360 *
                flaps_per_sec) * 30;
        end;
    end;    // instance
end;    // dragonfly


picture dragonfly_picture with
    field_of_view = 40;
    eye = <-20 -30 30>;

    // eye = 0 -50 0;       // side view
    // eye = -50 1 1;       // front view
    facets = 0;
    lookat = <6 0 -2>;
    background = sky_blue;
is
    distant_light from <.3 -.5 1>;
    dragonfly type's form with
        material is plastic colored orange;
        rotation of <0 10 0>;
        move to <0 0 -2>;
    end;
    dragonfly type's form with
        material is plastic colored red;
        rotation of <0 10 0>;
        move to <6 -5 5>;
    end;
    dragonfly type's form with
        material is plastic colored green;
        rotation of <0 10 0>;
        move to <5 8 0>;
    end;
end;    // dragonfly_picture


anim interactive_dragonfly
    args type args;
with
    eye = <-10 -10 10>;
    facets = 6;
    double_buffer is on;
    background = sky_blue;
    args check;
is
    dragonfly type dragonfly;

    mouse_controlled_actor dragonfly;
end;    // interactive_dragonfly
