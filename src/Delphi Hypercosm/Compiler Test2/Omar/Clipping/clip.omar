{***************************************************************}
{                          clip.omar                            }
{          Object-Oriented Modelling and Rendering (OMAR)       }
{***************************************************************}
{                                                               }
{                                                               }
{***************************************************************}
{                Copyright (c) 2000 Hypercosm, Inc.             }
{***************************************************************}
do clip_anim;


include "system/3d.ores";
include "system/args.ores";
include "system/check_keys.ores";
// include "system/sr71.smpl";
// include "system/fish.smpl";


shape thing is

    {
        block with
                magnify by .5;
                move to -1 0 0;
        end;
        torus with
                center = -1 0 0; normal = 1 0 0;
                inner_radius = .5; outer_radius = 1;
        end;
        sphere with
                magnify by .5;
                move to -1 0 0;
        end;
        cone with
                end1 = -1 0 0; end2 = -.5 0 0;
                radius1 = 1; radius2 = .5;
        end;
        }
    disk with
        center = <-1 0 0>;
        normal = <1 0 0>;
    end;
    cylinder with
        end1 = <-.5 0 0>;
        end2 = <.5 0 0>;
        radius = .5;
    end;
    cone with
        end1 = <.5 0 0>;
        end2 = <1 0 0>;
        radius1 = .5;
        radius2 = 0;
    end;
    sphere with
        radius = .5;
    end;
    sphere with
        radius = .25;
        color = <1 1 1>;
    end;

    {
        fish with
                magnify by .05;
                color = orange;
        end;
        }
    {
        jumbo with
                magnify by .0075;
        end;
        }
    {
        metallic white jet_engine with
                magnify by .5;
        end;
        }
    {
        sr71 with
                magnify by .015;
        end;
        }
end;    // thing


picture clip_picture with
    vector v = get_mouse;
    scalar x = v dot <1 0 0>;
    scalar y = v dot <0 1 0>;


    {
        projection is orthographic;
        field_of_view = 8;
        eye = 10 -30 20;
        }
    eye = <2 -6 4>;
    field_of_view = 55;
is
    shape thing1 is
        clipping_plane with
            rotate by (y * 360) around <1 0 0>;
            rotate by (x * 360) around <0 0 1>;
        end;
        thing;
    end;    // thing1


    shape thing2 is
        clipping_plane with
            rotate by 180 around <1 0 0>;
            rotate by (y * 360) around <1 0 0>;
            rotate by (x * 360) around <0 0 1>;
        end;
        thing with
            render_mode is wireframe;
        end;
    end;    // thing2

    distant_light from <.3 -.5 1>;
    parallelogram with
        move to <0 0 .01>;
        rotate by (y * 360) around <1 0 0>;
        rotate by (x * 360) around <0 0 1>;
        render_mode is wireframe;
        color = orange;
    end;
    thing1;
    thing2;
    block with
        render_mode is wireframe;
    end;
end;    // clip_picture


anim clip_anim
    args type args;
with
    render_mode is shaded;
    edges is outline;
    shading is face;
    double_buffer is true;
    args check;
is
    while true do
        clip_picture;
        check_keys;
    end;
end;    // clip_anim
