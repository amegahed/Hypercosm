{***************************************************************}
{ |\  /|												We Put  }
{ | >< Hypercosm 		  3ds_ellipse.ores				3d      }
{ |/  \|												To Work }
{***************************************************************}
{                                                               }
{   	Contains ellipse definitions that correspond to 	    }
{		entities from Discreet's 3D Studio Max software.		}
{                                                               }
{***************************************************************}
{                Copyright (c) 2004 Hypercosm, LLC.             }
{***************************************************************} 


include "system/3ds_shape.ores";
include "system/3ds_editable_spline.ores";
include "system/3ds_modifier_stacks.ores";


subject translated_3ds_ellipse
extends
    translated_3ds_collapsable translated_3ds_shape
does
    // constructor
    //
	verb new with

	    // geometry parameters
	    //
        scalar length = .5;
        scalar width = 1;
        	
        // shape parameters
        //
        integer steps = 4;
        boolean optimize is false;
        boolean adaptive is false;
        boolean renderable is false;
        scalar thickness = 1;
        
        // texturing parameters
        // 
        boolean gen_mapping_coords is false;
	end;

    // attribute setting method
    //
	verb set with

	    // geometry parameters
	    //
        scalar length = .5;
        scalar width = 1;
        	
        // shape parameters
        //
        integer steps = 4;
        boolean optimize is false;
        boolean adaptive is false;
        boolean renderable is false;
        scalar thickness = 1;
        
        // texturing parameters
        // 
        boolean gen_mapping_coords is false;
	end;
		
	// collapsable method
	//
	translated_3ds_stackable type question get_collapsed;
	
	// recycling methods
	//
	objective translated_3ds_ellipse type question get;
	reference verb recycle;	
has
    // geometry attributes
    //
    scalar length;
    scalar width;
    
private	
	// recycling attributes
	//
	translated_3ds_ellipse type next is none;
is
    // recycling free list
    //
    translated_3ds_ellipse type free_list is none;
    
    
    //
    // constructor
    //
    
    
	verb new with

	    // geometry parameters
	    //
        scalar length = .5;
        scalar width = 1;
        
        // shape parameters
        //
        integer steps = 4;
        boolean optimize is false;
        boolean adaptive is false;
        boolean renderable is false;
        scalar thickness = 1;
        
        // texturing parameters
        //
        boolean gen_mapping_coords is false;
	is
	    translated_3ds_shape new with
	    
			// set shape parameters
			//
            steps = static steps;
            optimize is static optimize;
            adaptive is static adaptive;
            renderable is static renderable;
            thickness = static thickness;
            
            // set texturing parameters
            //
            gen_mapping_coords is static gen_mapping_coords;	    
	    end;

		if verbose_recycling then
			write "new 3ds ellipse", ;
		end;
				    
		with translated_3ds_ellipse do
		
			// set geometry attributes
			//
            its length = length;
            its width = width;
		end;
	end;	// new
	

	//
    // attribute setting method
    //
    
    
	verb set with

	    // geometry parameters
	    //
        scalar length = .5;
        scalar width = 1;
        	
        // shape parameters
        //
        integer steps = 4;
        boolean optimize is false;
        boolean adaptive is false;
        boolean renderable is false;
        scalar thickness = 1;
        
        // texturing parameters
        // 
        boolean gen_mapping_coords is false;
    is
		with translated_3ds_ellipse do
		
			// set geometry attributes
			//
            its length = length;
            its width = width;
            
			// set shape parameters
			//
            its steps = steps;
            its optimize is optimize;
            its adaptive is adaptive;
            its renderable is renderable;
            its thickness = thickness;
            
            // set texturing parameters
            //
            its gen_mapping_coords is gen_mapping_coords;	
		end;    
	end;	// set
	
		
	//	
	// collapsable method
	//
	
	
	translated_3ds_stackable type question get_collapsed is
	    const integer num_segments = 4;
        translated_3ds_spline_vertices type vertices;
        translated_3ds_spline_segments type segments;
        translated_3ds_spline type spline is none;
        translated_3ds_splines type splines is none;
        translated_3ds_editable_spline type editable_spline is none;
        
        // geometric variables
        //
    	scalar angle = 360 / num_segments;
    	scalar a = (sin angle) * (sqrt (4 + 3 * sqr tan (angle / 2)) - 1);
        	
        // create vertices
        //
        dim none vertices[1 .. num_segments];
        for integer counter = 1 .. num vertices do
			scalar t = (counter - 1) / num vertices;
			scalar u = t * 360;
			scalar x = cos u;
			scalar y = sin u;
			vector point = <x y 0> * <width length 0>;
			vector tangent = <-y x 0> * <width length 0> * a;
			vertices[counter] is translated_3ds_bezier_vertex 
				at point from (-tangent / 3) to (tangent / 3);
        end;
        
        // create segments
        //
        dim none segments[1 .. num_segments];
        for integer counter = 1 .. num_segments - 1 do
            segments[counter] is translated_3ds_spline_segment type's get;
            segments[counter] set curve from vertices[counter] to vertices[counter + 1];
        end;
        segments[num_segments] is translated_3ds_spline_segment type's get;
        segments[num_segments] set curve from vertices[num_segments] to vertices[1];
             
        // create spline
        //
        spline is translated_3ds_spline type's get;
        spline append_vertices vertices;
        spline append_segments segments;
        
        // create splines
        //
        splines is [spline];
                
        // create editable spline
        //
        editable_spline is translated_3ds_editable_spline type's get;
        editable_spline set to splines with
        
            // set shape parameters
            //
            steps = static steps;
            optimize is static optimize;
            adaptive is static adaptive;
            renderable is static renderable;
            thickness = static thickness;
            
            // set texturing parameters
            // 
            gen_mapping_coords is static gen_mapping_coords;
        end;        
        
        recycle;       
        answer editable_spline;
	end;	// get_collapsed
	
	
	//	
	// recycling methods
	//
	
	
	objective translated_3ds_ellipse type question get is
		if some free_list then
		
			// get from free list
			//
			translated_3ds_ellipse type next is free_list;
			free_list is its next;
			
			answer next;
		else
			// create new
			//
			answer new translated_3ds_ellipse;
		end;
	end;	// get
	
	
	reference verb recycle is
	
		// add to free list
		//
		next is free_list;
		free_list is translated_3ds_ellipse;
		
		translated_3ds_ellipse is none;
	end;		// recycle	
end;	// translated_3ds_ellipse


//
// procedural interface
//


shape translated_3ds_ellipse with

    // geometry parameters
    //
    scalar length = .5;
    scalar width = 1;
    
    // shape parameters
    //
    integer steps = 4;
    boolean optimize is false;
    boolean adaptive is false;
    boolean renderable is false;
    scalar thickness = 1;
    
    // texturing parameters
    // 
    boolean gen_mapping_coords is false;
    
    // modifier stack
    //
	translated_3ds_ellipse type translated_3ds_ellipse is translated_3ds_ellipse type's get;
	modifier_stack push translated_3ds_stackable type translated_3ds_ellipse;
is
	// set first entry in modifier stack to object
	//
	translated_3ds_ellipse set with

	    // set geometry parameters
	    //
        length = static length;
        width = static width;
        
        // set shape parameters
        //
        steps = static steps;
        optimize is static optimize;
        adaptive is static adaptive;
        renderable is static renderable;
        thickness = static thickness;
        
        // set texturing parameters
        // 
        gen_mapping_coords is static gen_mapping_coords;
	end;
	
	// render
	//
	modifier_stack instance;
end;	// translated_3ds_ellipse
