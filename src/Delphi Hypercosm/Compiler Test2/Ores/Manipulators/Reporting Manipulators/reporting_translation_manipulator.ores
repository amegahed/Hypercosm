{***************************************************************}
{              reporting_translation_manipulator.ores           }
{                       OMAR Resources (ORES)                   }
{***************************************************************}
{                                                               }
{       Contains a definition of an object for moving           }
{       objects using direct manipulation.                      }
{                                                               }
{***************************************************************}
{                Copyright (c) 2000 Hypercosm, Inc.             }
{***************************************************************}


include "system/translation_manipulator.ores";
include "system/reporting.ores";


subject reporting_translation_manipulator
extends
    reportable sendable addressable translation_manipulator
does
    verb new
        named string type name is none;
        controlling shape target;
        bounded by shape bounding_shape does none;
        in string type units is "units";
    with
        scalar handle_size = default_handle_size;
        vector translation_snap = <0 0 0>, final_translation_snap = <0 0 0>;
        scalar max_translation = 0;
        boolean show_translation is true;
        scalar unit_size = 1;
    end;
    
    // overridden methods
    //
    verb touch
        from vector location;
        towards vector direction;
    end;
    verb release 
        from vector location;
        towards vector direction;
    end;
    
    // reportable methods
    //
    verb report;
    verb send
        message type message;
    end;
    verb address
        receivable type recipient;
    end;
has
    string type name, units;
    sender type sender;
    boolean show_translation;
    scalar unit_size;
is
    verb new
        named string type name is none;
        controlling shape target;
        bounded by shape bounding_shape does none;
        in string type units is "units";
    with
        scalar handle_size = default_handle_size;
        vector translation_snap = <0 0 0>, final_translation_snap = <0 0 0>;
        scalar max_translation = 0;
        boolean show_translation is true;
        scalar unit_size = 1;
    is  
        translation_manipulator new controlling target bounded by bounding_shape with
            handle_size = static handle_size;
            translation_snap = static translation_snap;
            final_translation_snap = static final_translation_snap;
            max_translation = static max_translation;
        end;
        
        with reporting_translation_manipulator do
            its name is name;
            its show_translation is show_translation;
            its units is units;
            its unit_size = unit_size;
        end;
    end;    // new
    
    
    // overridden methods
    //
    
    
    verb touch
        from vector location;
        towards vector direction;
    is    
        translation_manipulator static touch from location towards direction; 
        
        if pressed then
            report;
        end;          
    end;    // touch
    
    
    verb release 
        from vector location;
        towards vector direction;
    is
        translation_manipulator static release from location towards direction;
        sender send (new text_message of empty_string);
    end;    // release
    
    
    // sendable and receivable methods
    //
    
    
    verb report is
        string type message;
        
        if some plane then
            if pressed then
                message add "Moving ";
            else
                message add "Press and Drag to Move ";
            end;
        end;
        message add name;
        
        // translation message
        //
        if show_translation and pressed and some plane then
            vector point = target_center + translation;
            
            message add " to (";    
            message add scalar_to_string of (point.x * unit_size) to 1;
            message add ", ";
            message add scalar_to_string of (point.y * unit_size) to 1;
            message add ", ";
            message add scalar_to_string of (point.z * unit_size) to 1;
            message add ") ";
            message add units;
        end;
        
        sender send (new text_message of message);
    end;    // report
    
    
    verb send
        message type message;
    is
        sender send message;
    end;    // send
    
    
    verb address
        receivable type recipient;
    is
        sender address recipient;
    end;    // address
end;    // reporting_translation_manipulator
