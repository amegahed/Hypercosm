{***************************************************************}
{             reporting_transformation_manipulator.ores         }
{                       OMAR Resources (ORES)                   }
{***************************************************************}
{                                                               }
{       Contains a definition of an object for moving           }
{       objects using direct manipulation.                      }
{                                                               }
{***************************************************************}
{                Copyright (c) 2000 Hypercosm, Inc.             }
{***************************************************************}


include "system/transformation_manipulator.ores";
include "system/reporting.ores";


subject reporting_transformation_manipulator
extends
    reportable sendable addressable transformation_manipulator
does
    verb new
        named string type name is none;
        controlling shape target;
        bounded by shape bounding_shape does none;
        in string type units is "units";
    with
        scalar handle_size = default_handle_size;
        vector translation_snap = <0 0 0>, final_translation_snap = <0 0 0>;
        scalar rotation_snap = 0, final_rotation_snap = 90;
        scalar max_translation = 0;
        boolean show_translation is true;
        boolean show_orientation is true;
        scalar unit_size = 1;
    end;
    
    // overridden methods
    //
    verb touch
        from vector location;
        towards vector direction;
    end;
    verb release 
        from vector location;
        towards vector direction;
    end;
    
    // reportable methods
    //
    verb report;
    verb send
        message type message;
    end;
    verb address
        receivable type recipient;
    end;
has
    string type name, units;
    sender type sender;
    boolean show_translation;
    boolean show_orientation;
    scalar unit_size;
is
    verb new
        named string type name is none;
        controlling shape target;
        bounded by shape bounding_shape does none;
        in string type units is "units";
    with
        scalar handle_size = default_handle_size;
        vector translation_snap = <0 0 0>, final_translation_snap = <0 0 0>;
        scalar rotation_snap = 0, final_rotation_snap = 90;
        scalar max_translation = 0;
        boolean show_translation is true;
        boolean show_orientation is true;
        scalar unit_size = 1;
    is  
        transformation_manipulator new controlling target bounded by bounding_shape with
            handle_size = static handle_size;
            translation_snap = static translation_snap;
            final_translation_snap = static final_translation_snap;
            rotation_snap = static rotation_snap;
            final_rotation_snap = static final_rotation_snap;
            max_translation = static max_translation;
        end;
        
        with reporting_transformation_manipulator do
            its name is name;
            its show_translation is show_translation;
            its show_orientation is show_orientation;
            its units is units;
            its unit_size = unit_size;
        end;
    end;    // new
    
    
    verb touch
        from vector location;
        towards vector direction;
    is         
        transformation_manipulator static touch from location towards direction; 
        
        if pressed then
            report;
        end;          
    end;    // touch
    
    
    // overridden methods
    //
    
    
    verb release 
        from vector location;
        towards vector direction;
    is
        transformation_manipulator static release from location towards direction;
        sender send (new text_message of empty_string);
    end;    // release
 
     
    // reportable methods
    //
    

    verb report_translation is
        if some plane then
            string type message;
            
            if pressed then
                message add "Moving ";
                message add name;
                 
                if show_translation then
                    vector point = target_center + translation;
                    
                    message add " to (";      
                    message add scalar_to_string of (point.x * unit_size) to 1;
                    message add ", ";
                    message add scalar_to_string of (point.y * unit_size) to 1;
                    message add ", ";
                    message add scalar_to_string of (point.z * unit_size) to 1;
                    message add ") "; 
                    message add units;
                end;              
            else
                message add "Press and Drag to Move ";
                message add name;
            end;
            
            sender send (new text_message of message);
        end;
    end;    // report_translation
    

    verb report_rotation is
        if some axis then
            string type message;
            
            if pressed then          
                message add "Rotating ";
                message add name;
                
                if show_orientation then
                    vector angles = cumulative_rotation;
                    
                    when axis is
                        x_axis:
                            angles.x = itself + rotation;
                        end;
                        
                        y_axis:
                            angles.y = itself + rotation;
                        end;
                        
                        z_axis:
                            angles.z = itself + rotation;
                        end;
                    end;  
                    
                    message add " to (";      
                    message add scalar_to_string of (normalized_angle of angles.x) to 0;
                    message add ", ";
                    message add scalar_to_string of (normalized_angle of angles.y) to 0;
                    message add ", ";
                    message add scalar_to_string of (normalized_angle of angles.z) to 0;
                    message add ") degrees";
                end;
            else
                message add "Press and Drag to Rotate ";
                message add name;
            end;
            
            sender send (new text_message of message);
        end;
    end;    // report_rotation
    
            
    verb report is   
        if some plane then
            report_translation;
        elseif some axis then
            report_rotation; 
        end;
    end;    // report
    
    
    verb send
        message type message;
    is
        sender send message;
    end;    // send
    
    
    verb address
        receivable type recipient;
    is
        sender address recipient;
    end;    // address
end;    // reporting_transformation_manipulator
