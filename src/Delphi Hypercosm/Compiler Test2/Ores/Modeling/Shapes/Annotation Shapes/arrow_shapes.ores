{***************************************************************}
{ |\  /|												We Put  }
{ | >< Hypercosm		  arrow_shapes.ores				3d      }
{ |/  \|												To Work }
{***************************************************************}
{                                                               }
{       Contains some useful shapes composed of arrows			}
{		(such as orthogonal axes) that are useful for 			}
{		annotating 3 dimensional scenes.						}
{                                                               }
{***************************************************************}
{                Copyright (c) 2004 Hypercosm, LLC.             }
{***************************************************************}


include "system/arrows.ores";
include "system/marks.ores";
include "system/futura_l.ores";


{***************************************************************}
{                       axes drawing styles                     }
{***************************************************************}
enum axes_style is tripod, star;
axes_style type axes_style is star;


shape axes_tripod with

    // arrow geometry
    //
    scalar arrow_head_length = .1;
    scalar arrow_head_width = .1;
    scalar shaft_width = .025;
    
    // arrow drawing style
    //    
    arrow_style type arrow_head_style is global arrow_head_style;
    color type xcolor = red;
    color type ycolor = green;
    color type zcolor = blue;
is
	mark at <0 0 0>;
	
    arrow from <0 0 0> to <1 0 0> with
        arrow_head_length = static arrow_head_length;
        arrow_head_width = static arrow_head_width;
        shaft_width = static shaft_width;
        
	    head_style is arrow_head_style;
	    head_color = xcolor;
	    shaft_color = xcolor;
    end;    // x axis
    
    arrow from <0 0 0> to <0 1 0> with
        arrow_head_length = static arrow_head_length;
        arrow_head_width = static arrow_head_width;
        shaft_width = static shaft_width;
        
	    head_style is arrow_head_style;
	    head_color = ycolor;
	    shaft_color = ycolor;
    end;    // y axis
    
    arrow from <0 0 0> to <0 0 1> with
        arrow_head_length = static arrow_head_length;
        arrow_head_width = static arrow_head_width;
        shaft_width = static shaft_width;
        
	    head_style is arrow_head_style;
	    head_color = zcolor;
	    shaft_color = zcolor;
    end;    // z axis
end;    // axes_tripod


shape axes_star with

    // arrow geometry
    //
    scalar arrow_head_length = .1;
    scalar arrow_head_width = .1;
    scalar shaft_width = .025;

    // arrow drawing style
    //    
    arrow_style type arrow_head_style is global arrow_head_style;
    color type xcolor = red;
    color type ycolor = green;
    color type zcolor = blue;    
is
	mark at <0 0 0>;
	
    arrow from <-1 0 0> to <1 0 0> with
        arrow_head_length = static arrow_head_length;
        arrow_head_width = static arrow_head_width;
        shaft_width = static shaft_width;
        
	    head_style is arrow_head_style;
	    head_color = xcolor;
	    shaft_color = xcolor;
    end;    // x axis
    
    arrow from <0 -1 0> to <0 1 0> with
        arrow_head_length = static arrow_head_length;
        arrow_head_width = static arrow_head_width;
        shaft_width = static shaft_width;

	    head_style is arrow_head_style;
	    head_color = ycolor;
	    shaft_color = ycolor;
    end;    // y axis
    
    arrow from <0 0 -1> to <0 0 1> with
        arrow_head_length = static arrow_head_length;
        arrow_head_width = static arrow_head_width;
        shaft_width = static shaft_width;
        
	    head_style is arrow_head_style;
	    head_color = zcolor;
	    shaft_color = zcolor;
    end;    // z axis
end;    // axes_star


shape axes with

    // arrow geometry
    //
    scalar arrow_head_length = .1;
    scalar arrow_head_width = .1;
    scalar shaft_width = .025;
    
    // arrow drawing style
    // 
    arrow_style type arrow_head_style is global arrow_head_style;
    color type xcolor = red;
    color type ycolor = green;
    color type zcolor = blue;      

	// axes drawing style
	//
    axes_style type axes_style is global axes_style;
    boolean labelled is true;
is
    when axes_style is
        tripod:
            axes_tripod with
                arrow_head_length = static arrow_head_length;
                arrow_head_width = static arrow_head_width;
                shaft_width = static shaft_width;
                
                arrow_head_style is static arrow_head_style;
                xcolor = static xcolor;
                ycolor = static ycolor;
                zcolor = static zcolor;
            end;
        end;
        
        star:
            axes_star with
                arrow_head_length = static arrow_head_length;
                arrow_head_width = static arrow_head_width;
                shaft_width = static shaft_width;
                
                arrow_head_style is static arrow_head_style;
                xcolor = static xcolor;
                ycolor = static ycolor;
                zcolor = static zcolor;
            end;
        end;
    end;
    
    if labelled then
	    futura_l_letter "X" with
	        move to <1.1 0 0>;
	        color = red;
	    end;
	    futura_l_letter "Y" with
	        move to <0 1.2 0>;
	        color = green;
	    end;
	    futura_l_letter "Z" with
	        rotate by 90 around <1 0 0>;
	        move to <.1 0 .9>;
	        color = blue;
	    end;
    end;
end;    // axes


