{***************************************************************}
{ |\  /|                                                We Put  }
{ | >< Hypercosm             prisms.omar                3d      }
{ |/  \|                                                To Work }
{***************************************************************}
{                                                               }
{       This file contains a simulation of Iaasic Newton's      }
{       famous prism experiment where he demonstrated that      }
{       white light is actually made up of a mixture of the     }
{       colors of the spectrum.  In this experiment, a beam     }
{       of white light is first broken up into a spectrum by    }
{       a prism.  Then, the spectrum is passed into a second    }
{       prism where it is assembled once again into into a      }
{       beam of white light.                                    }
{                                                               }
{***************************************************************}
{                Copyright (c) 2004 Hypercosm, LLC.             }
{***************************************************************}
do ray_anim;

include "system/3d.ores";
include "system/shapes.ores";
include "system/lenses.ores";
include "system/anims.ores";
include "optical_bench.ores";

optical_bench type optical_bench with
	length = 10;
	width = 5;
	lamp_location = <4 0 2>;
end;    // optical_bench

anim ray_anim
	args type args;
with
	//
	// set rendering properties
	//
	eye = <10 -15 10>;
	field_of_view = 45;
	double_buffer is on;
	render_mode is shaded;
	show_manipulation_control is true;
	window_name is "Prisms";
	args check;
is
	//
	// define optical elements to be simulated
	//
	shape upright_prism is
		prism with
			rotate by 90 around <0 0 1>;
			rotate by 90 around <1 0 0>;
		end;
	end;    // upright_prism
	shape inverted_prism is
		prism with
			rotate by 90 around <0 0 1>;
			rotate by -90 around <1 0 0>;
		end;
	end;    // inverted_prism
	vector upright_prism_location = <0 0 1>;
	vector inverted_prism_location = <-2 0 1>;
	//
	// add elements to optical bench
	//
	optical_bench add_element upright_prism
		at upright_prism_location + <0 0 .5>
	with
		base = upright_prism_location;
	end;
	optical_bench add_element inverted_prism
		at inverted_prism_location + <0 0 1>
	with
		base = inverted_prism_location;
	end;
	//
	// simulate optical bench
	//
	mouse_controlled_actor optical_bench titled "Prisms";
end;    // ray_anim
