{***************************************************************}
{                          torus.omar                           }
{          Object-Oriented Modelling and Rendering (OMAR)       }
{***************************************************************}
{                                                               }
{                                                               }
{***************************************************************}
{                Copyright (c) 2004 Hypercosm, LLC.             }
{***************************************************************}
do torus_anim;

include "system/3d.ores";
include "system/anims.ores";
include "system/futura_l.ores";
include "system/arrow_shapes.ores";

shape labelled_torus with
	scalar umin = -30;
	scalar umax = 260;
	scalar vmin = -67.5;
	scalar vmax = 220;
is
	shape torus_primitive is
		torus with
			umin = static umin;
			umax = static umax;
			vmin = static vmin;
			vmax = static vmax;
		end;
	end;
	
	torus_primitive with
		material is glass colored torus_color;
		render_mode is shaded_line;
	end;
	
	futura_l_word "VMIN" with
		move to <.75 0 0>;
		rotate by 90 around <1 0 0>;
		rotate by vmin around <0 -1 0>;
		move to <.75 0 0>;
		rotate by umin around <0 0 1>;
	end;
	futura_l_word "VMAX" with
		rotate by 180 around <0 1 0>;
		move to <.75 0 0>;
		rotate by -90 around <1 0 0>;
		rotate by vmax around <0 -1 0>;
		move to <.75 0 0>;
		rotate by umin around <0 0 1>;
	end;
	futura_l_word "UMIN" with
		move to <1.25 0 0>;
		rotate by umin around <0 0 1>;
	end;
	futura_l_word "UMAX" with
		move to <1.25 0 0>;
		rotate by umax around <0 0 1>;
	end;
	arrow from <-.01 0 0> to <-.01 0 .5>;
	futura_l_word "NORMAL" with
		rotate by 90 around <1 0 0>;
		move to <-.4 0 .25>;
	end;
	// arcs showing longitude
	//
	arrow_arc to umax with
		radius = .25;
	end;
	arrow_arc to umin with
		radius = .35;
	end;
	line [<0 0 0> <1 0 0>] with
		rotate by umin around <0 0 1>;
	end;
	line [<0 0 0> <1 0 0>] with
		rotate by umax around <0 0 1>;
	end;
	// arcs showing lattitude
	//
	arrow_arc to vmax with
		radius = .5;
		rotate by 90 around <1 0 0>;
		move to <.75 0 0>;
		rotate by umin around <0 0 1>;
	end;
	arrow_arc to vmin with
		radius = .4;
		rotate by 90 around <1 0 0>;
		move to <.75 0 0>;
		rotate by umin around <0 0 1>;
	end;
	line [<0 0 0> <.5 0 0>] with
		rotate by vmin around <0 -1 0>;
		move to <.75 0 0>;
		rotate by umin around <0 0 1>;
	end;
	line [<0 0 0> <.5 0 0>] with
		rotate by vmax around <0 -1 0>;
		move to <.75 0 0>;
		rotate by umin around <0 0 1>;
	end;
	line [<.5 0 0> <.5 0 .8>];
	double_arrow from <0 0 .75> to <.5 0 .75>;
	line [<-1 0 0> <-1 0 .8>];
	double_arrow from <0 0 .75> to <-1 0 .75>;
	futura_l_word "INNER" with
		rotate by 90 around <1 0 0>;
		move to <.8 0 .85>;
	end;
	futura_l_word "RADIUS" with
		rotate by 90 around <1 0 0>;
		move to <.8 0 .65>;
	end;
	futura_l_word "OUTER" with
		rotate by 90 around <1 0 0>;
		move to <-.5 0 .85>;
	end;
	futura_l_word "RADIUS" with
		rotate by 90 around <1 0 0>;
		move to <-.5 0 .65>;
	end;
end;    // labelled_torus

shape torus_scene is
	labelled_torus;
	axes;
end;    // torus_scene
	
	
anim torus_anim
	args type args;
with
	eye = <2 -8 4>;
	field_of_view = 32;
	window_name is "The Torus Primitive";
	args check;
is
	mouse_controlled_shape torus_scene;
end;    // torus_anim
